// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*! THIS FILE IS AUTO-GENERATED */

const {google} = require('googleapis');
const healthcare = google.healthcare('v1beta1');

/*
 * Translates a code from one value set to another by searching for
 * appropriate concept maps.
 *
 * Implements the FHIR standard $translate operation
 * ([DSTU2](https://www.hl7.org/fhir/DSTU2/operation-conceptmap-translate.html),
 * [STU3](https://www.hl7.org/fhir/STU3/operation-conceptmap-translate.html),
 * [R4](https://www.hl7.org/fhir/R4/operation-conceptmap-translate.html)).
 *
 * On success, the response body contains a JSON-encoded representation
 * of a FHIR Parameters resource, which includes the translation result.
 * Errors generated by the FHIR store contain a JSON-encoded
 * `OperationOutcome` resource describing the reason for the error. If the
 * request cannot be mapped to a valid API method on a FHIR store, a generic
 * GCP error might be returned instead.
 */

async function main() {
  // By default, this method will look for, in order:
  // 1. An environment variable set to `GOOGLE_APPLICATION_CREDENTIALS`
  //    pointing to a service account credential file
  // 2. A GCE metadata server, present in Google Cloud products like
  //    Compute Engine, Kubernetes Engine, Cloud Run, etc
  // 3. A local OAuth token written by the Cloud SDK, obtained by running
  //    `gcloud auth application-default login`.  This is preferred for local
  //    development.
  const auth = new google.auth.GoogleAuth({
    // Scopes can be specified either as an array or as a single, space-delimited string.
    scopes: ['https://www.googleapis.com/auth/cloud-platform'],
  });

  // Acquire an auth client, and bind it to all future calls
  const authClient = await auth.getClient();
  google.options('auth', authClient);

  // Do the magic
  const res =
    (await healthcare.projects.locations.datasets.fhirStores.fhir.ConceptMap) -
    search -
    translate({
      // The code to translate.
      code: 'placeholder-value',
      // The version of the concept map to use. If unset, the most current version is used.
      conceptMapVersion: 'placeholder-value',
      // The name for the FHIR store containing the concept map(s) to use for the translation.
      parent:
        'projects/my-project/locations/my-location/datasets/[^/]+/fhirStores/[^/]+',
      // The source value set of the concept map to be used. If unset, target is used to search for concept maps.
      source: 'placeholder-value',
      // The system for the code to be translated.
      system: 'placeholder-value',
      // The target value set of the concept map to be used. If unset, source is used to search for concept maps.
      target: 'placeholder-value',
      // The canonical url of the concept map to use. If unset, the source and target is used to search for concept maps.
      url: 'placeholder-value',
    });
  console.log(res.data);
}

main().catch(e => {
  console.error(e);
  throw e;
});
